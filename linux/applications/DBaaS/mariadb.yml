---
- name: "mariadb"
  hosts: all
  become: true

  vars:

    mariadb_root_pass: "{{ dbroot | default('default') }}"
    mariadb_dbname: "{{ dbname | default(omit) }}"
    mariadb_dbuser: "{{ dbuser | default(omit) }}"
    mariadb_dbpass: "{{ dbpass | default(omit) }}"
    mariadb_dbstate: "{{ dbstate | default('present') }}"
    mariadb_dbuser_state: "{{ mariadb_dbstate }}"

    mariadb_services:
      - mariadb

    mariadb_ports:
      - 1186/tcp
      - 1186/udp
      - 2273/tcp
      - 2273/udp
      - 3306/udp
      - 3306/tcp

    mariadb_packages:
      - mariadb
      - mariadb-server
      - MySQL-python

  handlers:
    - name: "restart mariadb_service"
      service:
        name: "mariadb"
        state: restarted

  tasks:
    - name: "Ensure state of mariadb_packages"
      yum:
        name: "{{ mariadb_package }}"
        state: latest
      with_items: "{{ mariadb_packages }}"
      notify: "restart mariadb_service"
      loop_control:
        loop_var: mariadb_package

    - name: "Ensure state of mariadb_services"
      service:
        name: "{{ mariadb_service }}"
        enabled: yes
        state: started
      with_items: "{{ mariadb_services }}"
      loop_control:
        loop_var: mariadb_service

    - name: "Ensure state of mariadb configuration"
      template:
        src: templates/my.cnf.j2
        dest: /etc/my.cnf
        backup: yes
      notify: "restart mariadb_service"

    - name: "Ensure user has credentials file in ~/.my.cnf"
      template:
        src: templates/credentials.j2
        dest: ~/.my.cnf
        mode: 600
        backup: yes

    - name: "Ensure state of root password"
      mysql_user:
        name: root
        password: "{{ mariadb_root_pass }}"
        check_implicit_admin: true

    - name: "Ensure state of database"
      mysql_db:
        name: "{{ mariadb_dbname }}"
        encoding: utf8
        state: "{{ mariadb_dbstate }}"
      when: mariadb_dbname is defined

    - name: "Ensure state of user"
      mysql_user:
        name: "{{ mariadb_dbuser }}"
        host: '%'
        password: "{{ mariadb_dbpass }}"
        priv: '*.*:ALL,GRANT'
        state: "{{ mariadb_dbuser_state }}"
      when:
        - mariadb_dbuser is defined
        - mariadb_dbpass is defined

#    - name: "Ensure state of mariadb_ports"
#      firewalld:
#        port: "{{ mariadb_port }}"
#        state: enabled
#        zone: public
#        permanent: yes
#        immediate: true
#      with_items: "{{ mariadb_ports }}"
#      loop_control:
#        loop_var: mariadb_port
